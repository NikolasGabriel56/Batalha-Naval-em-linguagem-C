#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <locale.h>

// Definições constantes 
#define BOARD_SIZE 5
#define SHIP 'X'
#define WATER '~'
#define HIT 'H'
#define MISS 'M'

// Função para inicializar o tabuleiro
void initializeBoard(char board[BOARD_SIZE][BOARD_SIZE]) {
    int i, j;
    for (i = 0; i < BOARD_SIZE; i++) {
        for (j = 0; j < BOARD_SIZE; j++) {
            board[i][j] = WATER;
        }
    }
}

//Função para imprimir o tabuleiro 
void printBoard(char board[BOARD_SIZE][BOARD_SIZE], int reveal) {
    int i, j;
    printf("   ");
    for (j = 0; j < BOARD_SIZE; j++) {
        printf("%2d ", j);
    }
    printf("\n");

    for (i = 0; i < BOARD_SIZE; i++) {
        printf("%2d ", i);
        for (j = 0; j < BOARD_SIZE; j++) {
            if (board[i][j] == SHIP && !reveal) {
                printf("%2c ", WATER);
            } else {
                printf("%2c ", board[i][j]);
            }
        }
        printf("\n");
    }
}

//Função para posicionar os navios
void placeShips(char board[BOARD_SIZE][BOARD_SIZE], int numShips) {
    int i, x, y;
    for (i = 0; i < numShips; i++) {
        do {
            x = rand() % BOARD_SIZE;
            y = rand() % BOARD_SIZE;
        } while (board[x][y] == SHIP);
        board[x][y] = SHIP;
    }
}

//Função de inicializar um novo jogo
void startNewGame(char board1[BOARD_SIZE][BOARD_SIZE], char board2[BOARD_SIZE][BOARD_SIZE], int numShips) {
    initializeBoard(board1);
    initializeBoard(board2);
    placeShips(board1, numShips);
    placeShips(board2, numShips);
}

int main() {
    setlocale(LC_ALL, "Portuguese");
    system("color b0");
    char board1[BOARD_SIZE][BOARD_SIZE];
    char board2[BOARD_SIZE][BOARD_SIZE];
    int numShips = 5;

    printf("- Legenda: - \n");
    printf("- Mar = M, Dano = H - ");
    printf("\n- Se você acertar uma posição repetida você perde sua vez. TENHA ATENÇÃO -");
    printf("\n- Para finalizar o jogo, você deve destruir 5 navios -\n");
    printf("- Para continuar após as tentativas dos dois jogadores, pressione ENTER -\n ");

    printf("\nJogador 1, digite seu nome: ");
    char player1[100];
    scanf("%s", player1);

    printf("Jogador 2, digite seu nome: ");
    char player2[100];
    scanf("%s", player2);
    
//Loop principal
    while (1) {
        startNewGame(board1, board2, numShips);
        int attempts1 = 0;
        int hits1 = 0;

        printf("\n\t%s - Batalha Naval\n", player1);
        printf("\n==============================================\n");

        int attempts2 = 0;
        int hits2 = 0;

        printf("\t%s - Batalha Naval\n", player2);
        printf("\n==============================================\n");

//Lógica de jogo
        while (hits1 < numShips && hits2 < numShips) {
            // Jogador 1
            printf("\n%s - Tentativa %d\n", player1, attempts1 + 1);
            printBoard(board1, 0);

            int x, y;
            printf("Digite as coordenadas (linha coluna): ");
            while (1) {
                scanf("%d %d", &x, &y);
                if (x < 0 || x >= BOARD_SIZE || y < 0 || y >= BOARD_SIZE) {
                    printf("Coordenadas fora do tabuleiro. Tente novamente: ");
                } else {
                    break;
                }
            }

            if (board2[x][y] == SHIP) {
                printf("Você acertou um navio de %s!\n", player2);
                board2[x][y] = HIT;
                hits1++;
            } else if (board2[x][y] == HIT || board2[x][y] == MISS) {
                printf("Você já acertou essa posição. Perdeu a vez.\n");
            } else {
                printf("Você atingiu água.\n");
                board2[x][y] = MISS;
            }

            attempts1++;

            if (hits1 == numShips) {
                printf("%s venceu!\n", player1);
                break;
            }

            // Jogador 2
            printf("\n %s - Tentativa %d\n", player2, attempts2 + 1);
            printBoard(board2, 0);

            printf("\nDigite as coordenadas (linha coluna):");
            while (1) {
                scanf("%d %d", &x, &y);
                if (x < 0 || x >= BOARD_SIZE || y < 0 || y >= BOARD_SIZE) {
                    printf("Coordenadas fora do tabuleiro. Tente novamente: ");
                } else {
                    break;
                }
            }

            if (board1[x][y] == SHIP) {
                printf("Você acertou um navio de %s!\n", player1);
                board1[x][y] = HIT;
                hits2++;
            } else if (board1[x][y] == HIT || board1[x][y] == MISS) {
                printf("Você já acertou essa posição. Perdeu a vez.\n");
            } else {
                printf("Você atingiu água.\n\n");
                board1[x][y] = MISS;
            }

            attempts2++;

            if (hits2 == numShips) {
                printf("\n%s venceu!\n", player2);
                break;
            }

            system("pause");
            system("Cls");
        }

//Pós jogo
        printf("Tabuleiro final de %s:\n", player1);
        printBoard(board1, 1);

        printf("\nTabuleiro final de %s:\n", player2);
        printBoard(board2, 1);

//Pergunta se o usuário deseja jogar novamente
        printf("\nDeseja jogar novamente? (S/N): ");
        char playAgain;
        scanf(" %c", &playAgain);
        if (playAgain != 'S' && playAgain != 's') {
            break;
        }
    }

    return 0;
}

